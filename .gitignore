
# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Oo]ut/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
.vscode/

# Visual Studio 2017 auto generated files
Generated\ Files/

# Build logs
[Bb]uild[Ll]og.*

# Build artifacts
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc
*.o

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

## Xcode User settings
xcuserdata/

## Xcode 8 and earlier
*.xcscmblueprint
*.xccheckout

## Xcode 3
*.mode1v3
*.pbxuser

## Kill .DS_Store
**/.DS_Store

# Ignore wasm build artifacts.
/wasm

#-- The 'game' directory is the default working directory for Minecraft PE if running from VS directly.


# Ignore keep directory - where you can keep files for later use
/keep

# Ignore the games directory - where levels will be saved
/game/games

# Ignore options.txt - where your configuration will be saved
/game/options.txt
/game/assetsO

# CLion
/.idea
/cmake-build-*

# PCM sound extraction
/tools/__pycache__
/tools/venv
/game/assets

/res/assets
/res/scene.pkg
/res/tmp_scene
/steamsdk